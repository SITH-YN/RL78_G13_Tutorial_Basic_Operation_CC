/******************************************************************************/
/* DISCLAIMER                                                                 */
/* This software is supplied by Renesas Electronics Corporation and is only   */
/* intended for use with Renesas products. No other uses are authorized.This  */
/* software is owned by Renesas Electronics Corporation and is protected      */
/* under all applicable laws, including copyright laws.                       */
/* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES          */
/* REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING  */
/* BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR */
/* PURPOSE AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY           */
/* DISCLAIMED.                                                                */
/* TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS     */
/* ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE       */
/* LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL      */
/* DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS    */
/* AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.           */
/* Renesas reserves the right, without notice, to make changes to this        */
/* software and to discontinue the availability of this software.             */
/* By using this software, you agree to the additional terms and conditions   */
/* found by accessing the following link:                                     */
/* http://www.renesas.com/disclaimer                                          */
/*                                                                            */
/* Device     : RL78/R5F100LE                                                 */
/* File Name  : iodefine.h                                                    */
/* Abstract   : Definition of Special Function Register (SFR)                 */
/* History    : V1.14  [Device File version]                                  */
/* Options    : -df=C:\Program Files (x86)\Renesas Electronics\CS+\CC\Device\ */
/*              RL78\Devicefile\DR5F100LE.DVF -o=C:\svn\CS+\RL78_G13_Tutorial */
/*              _Basic_Operation_CC\iodefine.h -misra_c=on -f                 */
/* Date       : 2020/03/04                                                    */
/* Version    : V1.12.00.01  [df2iodef.exe version]                           */
/* This is a typical example.                                                 */
/*                                                                            */
/******************************************************************************/
#ifndef __R5F100LEIODEFINE_HEADER__
#define __R5F100LEIODEFINE_HEADER__

#ifndef _IODEF_MISRA_C_TYPEDEF_
#define _IODEF_MISRA_C_TYPEDEF_
typedef unsigned char   uint8;
typedef unsigned short  uint16;
typedef unsigned long   uint32;
#endif

typedef struct
{
    uint8 no0:1;
    uint8 no1:1;
    uint8 no2:1;
    uint8 no3:1;
    uint8 no4:1;
    uint8 no5:1;
    uint8 no6:1;
    uint8 no7:1;
} __bitf_T;

typedef struct
{
    uint8 no0:1;
    uint8 no1:1;
    uint8 no2:1;
    uint8 no3:1;
    uint8 no4:1;
    uint8 no5:1;
    uint8 no6:1;
    uint8 no7:1;
    uint8 no8:1;
    uint8 no9:1;
    uint8 no10:1;
    uint8 no11:1;
    uint8 no12:1;
    uint8 no13:1;
    uint8 no14:1;
    uint8 no15:1;
} __bitf_T2;



#define ADM2         (*(volatile __near uint8  *)0x10U)
#define ADM2_bit     (*(volatile __near __bitf_T *)0x10U)
#define ADTYP        (((volatile __near __bitf_T *)0x10U)->no0)
#define AWC          (((volatile __near __bitf_T *)0x10U)->no2)
#define ADRCK        (((volatile __near __bitf_T *)0x10U)->no3)
#define ADUL         (*(volatile __near uint8  *)0x11U)
#define ADLL         (*(volatile __near uint8  *)0x12U)
#define ADTES        (*(volatile __near uint8  *)0x13U)
#define PU0          (*(volatile __near uint8  *)0x30U)
#define PU0_bit      (*(volatile __near __bitf_T *)0x30U)
#define PU1          (*(volatile __near uint8  *)0x31U)
#define PU1_bit      (*(volatile __near __bitf_T *)0x31U)
#define PU3          (*(volatile __near uint8  *)0x33U)
#define PU3_bit      (*(volatile __near __bitf_T *)0x33U)
#define PU4          (*(volatile __near uint8  *)0x34U)
#define PU4_bit      (*(volatile __near __bitf_T *)0x34U)
#define PU5          (*(volatile __near uint8  *)0x35U)
#define PU5_bit      (*(volatile __near __bitf_T *)0x35U)
#define PU7          (*(volatile __near uint8  *)0x37U)
#define PU7_bit      (*(volatile __near __bitf_T *)0x37U)
#define PU12         (*(volatile __near uint8  *)0x3CU)
#define PU12_bit     (*(volatile __near __bitf_T *)0x3CU)
#define PU14         (*(volatile __near uint8  *)0x3EU)
#define PU14_bit     (*(volatile __near __bitf_T *)0x3EU)
#define PIM0         (*(volatile __near uint8  *)0x40U)
#define PIM0_bit     (*(volatile __near __bitf_T *)0x40U)
#define PIM1         (*(volatile __near uint8  *)0x41U)
#define PIM1_bit     (*(volatile __near __bitf_T *)0x41U)
#define PIM5         (*(volatile __near uint8  *)0x45U)
#define PIM5_bit     (*(volatile __near __bitf_T *)0x45U)
#define POM0         (*(volatile __near uint8  *)0x50U)
#define POM0_bit     (*(volatile __near __bitf_T *)0x50U)
#define POM1         (*(volatile __near uint8  *)0x51U)
#define POM1_bit     (*(volatile __near __bitf_T *)0x51U)
#define POM5         (*(volatile __near uint8  *)0x55U)
#define POM5_bit     (*(volatile __near __bitf_T *)0x55U)
#define POM7         (*(volatile __near uint8  *)0x57U)
#define POM7_bit     (*(volatile __near __bitf_T *)0x57U)
#define PMC0         (*(volatile __near uint8  *)0x60U)
#define PMC0_bit     (*(volatile __near __bitf_T *)0x60U)
#define PMC12        (*(volatile __near uint8  *)0x6CU)
#define PMC12_bit    (*(volatile __near __bitf_T *)0x6CU)
#define PMC14        (*(volatile __near uint8  *)0x6EU)
#define PMC14_bit    (*(volatile __near __bitf_T *)0x6EU)
#define NFEN0        (*(volatile __near uint8  *)0x70U)
#define NFEN0_bit    (*(volatile __near __bitf_T *)0x70U)
#define NFEN1        (*(volatile __near uint8  *)0x71U)
#define NFEN1_bit    (*(volatile __near __bitf_T *)0x71U)
#define ISC          (*(volatile __near uint8  *)0x73U)
#define ISC_bit      (*(volatile __near __bitf_T *)0x73U)
#define TIS0         (*(volatile __near uint8  *)0x74U)
#define ADPC         (*(volatile __near uint8  *)0x76U)
#define PIOR         (*(volatile __near uint8  *)0x77U)
#define IAWCTL       (*(volatile __near uint8  *)0x78U)
#define GDIDIS       (*(volatile __near uint8  *)0x7DU)
#define GDIDIS_bit   (*(volatile __near __bitf_T *)0x7DU)
#define DFLCTL       (*(volatile __near uint8  *)0x90U)
#define DFLCTL_bit   (*(volatile __near __bitf_T *)0x90U)
#define DFLEN        (((volatile __near __bitf_T *)0x90U)->no0)
#define HIOTRM       (*(volatile __near uint8  *)0xA0U)
#define HOCODIV      (*(volatile __near uint8  *)0xA8U)
#define TEMPCAL0     (*(volatile __near uint8  *)0xACU)
#define TEMPCAL1     (*(volatile __near uint8  *)0xADU)
#define TEMPCAL2     (*(volatile __near uint8  *)0xAEU)
#define TEMPCAL3     (*(volatile __near uint8  *)0xAFU)
#define MDCL         (*(volatile __near uint16 *)0xE0U)
#define MDCH         (*(volatile __near uint16 *)0xE2U)
#define MDUC         (*(volatile __near uint8  *)0xE8U)
#define MDUC_bit     (*(volatile __near __bitf_T *)0xE8U)
#define DIVST        (((volatile __near __bitf_T *)0xE8U)->no0)
#define MACSF        (((volatile __near __bitf_T *)0xE8U)->no1)
#define MACOF        (((volatile __near __bitf_T *)0xE8U)->no2)
#define MDSM         (((volatile __near __bitf_T *)0xE8U)->no3)
#define MACMODE      (((volatile __near __bitf_T *)0xE8U)->no6)
#define DIVMODE      (((volatile __near __bitf_T *)0xE8U)->no7)
#define PER0         (*(volatile __near uint8  *)0xF0U)
#define PER0_bit     (*(volatile __near __bitf_T *)0xF0U)
#define TAU0EN       (((volatile __near __bitf_T *)0xF0U)->no0)
#define SAU0EN       (((volatile __near __bitf_T *)0xF0U)->no2)
#define SAU1EN       (((volatile __near __bitf_T *)0xF0U)->no3)
#define IICA0EN      (((volatile __near __bitf_T *)0xF0U)->no4)
#define ADCEN        (((volatile __near __bitf_T *)0xF0U)->no5)
#define RTCEN        (((volatile __near __bitf_T *)0xF0U)->no7)
#define OSMC         (*(volatile __near uint8  *)0xF3U)
#define RMC          (*(volatile __near uint8  *)0xF4U)
#define RMC_bit      (*(volatile __near __bitf_T *)0xF4U)
#define WDVOL        (((volatile __near __bitf_T *)0xF4U)->no7)
#define RPECTL       (*(volatile __near uint8  *)0xF5U)
#define RPECTL_bit   (*(volatile __near __bitf_T *)0xF5U)
#define RPEF         (((volatile __near __bitf_T *)0xF5U)->no0)
#define RPERDIS      (((volatile __near __bitf_T *)0xF5U)->no7)
#define BCDADJ       (*(volatile __near uint8  *)0xFEU)
#define SSR00        (*(volatile __near uint16 *)0x100U)
#define SSR00L       (*(volatile __near uint8  *)0x100U)
#define SSR01        (*(volatile __near uint16 *)0x102U)
#define SSR01L       (*(volatile __near uint8  *)0x102U)
#define SSR02        (*(volatile __near uint16 *)0x104U)
#define SSR02L       (*(volatile __near uint8  *)0x104U)
#define SSR03        (*(volatile __near uint16 *)0x106U)
#define SSR03L       (*(volatile __near uint8  *)0x106U)
#define SIR00        (*(volatile __near uint16 *)0x108U)
#define SIR00L       (*(volatile __near uint8  *)0x108U)
#define SIR01        (*(volatile __near uint16 *)0x10AU)
#define SIR01L       (*(volatile __near uint8  *)0x10AU)
#define SIR02        (*(volatile __near uint16 *)0x10CU)
#define SIR02L       (*(volatile __near uint8  *)0x10CU)
#define SIR03        (*(volatile __near uint16 *)0x10EU)
#define SIR03L       (*(volatile __near uint8  *)0x10EU)
#define SMR00        (*(volatile __near uint16 *)0x110U)
#define SMR01        (*(volatile __near uint16 *)0x112U)
#define SMR02        (*(volatile __near uint16 *)0x114U)
#define SMR03        (*(volatile __near uint16 *)0x116U)
#define SCR00        (*(volatile __near uint16 *)0x118U)
#define SCR01        (*(volatile __near uint16 *)0x11AU)
#define SCR02        (*(volatile __near uint16 *)0x11CU)
#define SCR03        (*(volatile __near uint16 *)0x11EU)
#define SE0          (*(volatile __near uint16 *)0x120U)
#define SE0L         (*(volatile __near uint8  *)0x120U)
#define SE0L_bit     (*(volatile __near __bitf_T *)0x120U)
#define SS0          (*(volatile __near uint16 *)0x122U)
#define SS0L         (*(volatile __near uint8  *)0x122U)
#define SS0L_bit     (*(volatile __near __bitf_T *)0x122U)
#define ST0          (*(volatile __near uint16 *)0x124U)
#define ST0L         (*(volatile __near uint8  *)0x124U)
#define ST0L_bit     (*(volatile __near __bitf_T *)0x124U)
#define SPS0         (*(volatile __near uint16 *)0x126U)
#define SPS0L        (*(volatile __near uint8  *)0x126U)
#define SO0          (*(volatile __near uint16 *)0x128U)
#define SOE0         (*(volatile __near uint16 *)0x12AU)
#define SOE0L        (*(volatile __near uint8  *)0x12AU)
#define SOE0L_bit    (*(volatile __near __bitf_T *)0x12AU)
#define SOL0         (*(volatile __near uint16 *)0x134U)
#define SOL0L        (*(volatile __near uint8  *)0x134U)
#define SSC0         (*(volatile __near uint16 *)0x138U)
#define SSC0L        (*(volatile __near uint8  *)0x138U)
#define SSR10        (*(volatile __near uint16 *)0x140U)
#define SSR10L       (*(volatile __near uint8  *)0x140U)
#define SSR11        (*(volatile __near uint16 *)0x142U)
#define SSR11L       (*(volatile __near uint8  *)0x142U)
#define SIR10        (*(volatile __near uint16 *)0x148U)
#define SIR10L       (*(volatile __near uint8  *)0x148U)
#define SIR11        (*(volatile __near uint16 *)0x14AU)
#define SIR11L       (*(volatile __near uint8  *)0x14AU)
#define SMR10        (*(volatile __near uint16 *)0x150U)
#define SMR11        (*(volatile __near uint16 *)0x152U)
#define SCR10        (*(volatile __near uint16 *)0x158U)
#define SCR11        (*(volatile __near uint16 *)0x15AU)
#define SE1          (*(volatile __near uint16 *)0x160U)
#define SE1L         (*(volatile __near uint8  *)0x160U)
#define SE1L_bit     (*(volatile __near __bitf_T *)0x160U)
#define SS1          (*(volatile __near uint16 *)0x162U)
#define SS1L         (*(volatile __near uint8  *)0x162U)
#define SS1L_bit     (*(volatile __near __bitf_T *)0x162U)
#define ST1          (*(volatile __near uint16 *)0x164U)
#define ST1L         (*(volatile __near uint8  *)0x164U)
#define ST1L_bit     (*(volatile __near __bitf_T *)0x164U)
#define SPS1         (*(volatile __near uint16 *)0x166U)
#define SPS1L        (*(volatile __near uint8  *)0x166U)
#define SO1          (*(volatile __near uint16 *)0x168U)
#define SOE1         (*(volatile __near uint16 *)0x16AU)
#define SOE1L        (*(volatile __near uint8  *)0x16AU)
#define SOE1L_bit    (*(volatile __near __bitf_T *)0x16AU)
#define SOL1         (*(volatile __near uint16 *)0x174U)
#define SOL1L        (*(volatile __near uint8  *)0x174U)
#define TCR00        (*(volatile __near uint16 *)0x180U)
#define TCR01        (*(volatile __near uint16 *)0x182U)
#define TCR02        (*(volatile __near uint16 *)0x184U)
#define TCR03        (*(volatile __near uint16 *)0x186U)
#define TCR04        (*(volatile __near uint16 *)0x188U)
#define TCR05        (*(volatile __near uint16 *)0x18AU)
#define TCR06        (*(volatile __near uint16 *)0x18CU)
#define TCR07        (*(volatile __near uint16 *)0x18EU)
#define TMR00        (*(volatile __near uint16 *)0x190U)
#define TMR01        (*(volatile __near uint16 *)0x192U)
#define TMR02        (*(volatile __near uint16 *)0x194U)
#define TMR03        (*(volatile __near uint16 *)0x196U)
#define TMR04        (*(volatile __near uint16 *)0x198U)
#define TMR05        (*(volatile __near uint16 *)0x19AU)
#define TMR06        (*(volatile __near uint16 *)0x19CU)
#define TMR07        (*(volatile __near uint16 *)0x19EU)
#define TSR00        (*(volatile __near uint16 *)0x1A0U)
#define TSR00L       (*(volatile __near uint8  *)0x1A0U)
#define TSR01        (*(volatile __near uint16 *)0x1A2U)
#define TSR01L       (*(volatile __near uint8  *)0x1A2U)
#define TSR02        (*(volatile __near uint16 *)0x1A4U)
#define TSR02L       (*(volatile __near uint8  *)0x1A4U)
#define TSR03        (*(volatile __near uint16 *)0x1A6U)
#define TSR03L       (*(volatile __near uint8  *)0x1A6U)
#define TSR04        (*(volatile __near uint16 *)0x1A8U)
#define TSR04L       (*(volatile __near uint8  *)0x1A8U)
#define TSR05        (*(volatile __near uint16 *)0x1AAU)
#define TSR05L       (*(volatile __near uint8  *)0x1AAU)
#define TSR06        (*(volatile __near uint16 *)0x1ACU)
#define TSR06L       (*(volatile __near uint8  *)0x1ACU)
#define TSR07        (*(volatile __near uint16 *)0x1AEU)
#define TSR07L       (*(volatile __near uint8  *)0x1AEU)
#define TE0          (*(volatile __near uint16 *)0x1B0U)
#define TE0L         (*(volatile __near uint8  *)0x1B0U)
#define TE0L_bit     (*(volatile __near __bitf_T *)0x1B0U)
#define TS0          (*(volatile __near uint16 *)0x1B2U)
#define TS0L         (*(volatile __near uint8  *)0x1B2U)
#define TS0L_bit     (*(volatile __near __bitf_T *)0x1B2U)
#define TT0          (*(volatile __near uint16 *)0x1B4U)
#define TT0L         (*(volatile __near uint8  *)0x1B4U)
#define TT0L_bit     (*(volatile __near __bitf_T *)0x1B4U)
#define TPS0         (*(volatile __near uint16 *)0x1B6U)
#define TO0          (*(volatile __near uint16 *)0x1B8U)
#define TO0L         (*(volatile __near uint8  *)0x1B8U)
#define TOE0         (*(volatile __near uint16 *)0x1BAU)
#define TOE0L        (*(volatile __near uint8  *)0x1BAU)
#define TOE0L_bit    (*(volatile __near __bitf_T *)0x1BAU)
#define TOL0         (*(volatile __near uint16 *)0x1BCU)
#define TOL0L        (*(volatile __near uint8  *)0x1BCU)
#define TOM0         (*(volatile __near uint16 *)0x1BEU)
#define TOM0L        (*(volatile __near uint8  *)0x1BEU)
#define IICCTL00     (*(volatile __near uint8  *)0x230U)
#define IICCTL00_bit (*(volatile __near __bitf_T *)0x230U)
#define SPT0         (((volatile __near __bitf_T *)0x230U)->no0)
#define STT0         (((volatile __near __bitf_T *)0x230U)->no1)
#define ACKE0        (((volatile __near __bitf_T *)0x230U)->no2)
#define WTIM0        (((volatile __near __bitf_T *)0x230U)->no3)
#define SPIE0        (((volatile __near __bitf_T *)0x230U)->no4)
#define WREL0        (((volatile __near __bitf_T *)0x230U)->no5)
#define LREL0        (((volatile __near __bitf_T *)0x230U)->no6)
#define IICE0        (((volatile __near __bitf_T *)0x230U)->no7)
#define IICCTL01     (*(volatile __near uint8  *)0x231U)
#define IICCTL01_bit (*(volatile __near __bitf_T *)0x231U)
#define PRS0         (((volatile __near __bitf_T *)0x231U)->no0)
#define DFC0         (((volatile __near __bitf_T *)0x231U)->no2)
#define SMC0         (((volatile __near __bitf_T *)0x231U)->no3)
#define DAD0         (((volatile __near __bitf_T *)0x231U)->no4)
#define CLD0         (((volatile __near __bitf_T *)0x231U)->no5)
#define WUP0         (((volatile __near __bitf_T *)0x231U)->no7)
#define IICWL0       (*(volatile __near uint8  *)0x232U)
#define IICWH0       (*(volatile __near uint8  *)0x233U)
#define SVA0         (*(volatile __near uint8  *)0x234U)
#define CRC0CTL      (*(volatile __near uint8  *)0x2F0U)
#define CRC0CTL_bit  (*(volatile __near __bitf_T *)0x2F0U)
#define CRC0EN       (((volatile __near __bitf_T *)0x2F0U)->no7)
#define PGCRCL       (*(volatile __near uint16 *)0x2F2U)
#define CRCD         (*(volatile __near uint16 *)0x2FAU)
#define P0           (*(volatile __near uint8  *)0xFF00U)
#define P0_bit       (*(volatile __near __bitf_T *)0xFF00U)
#define P1           (*(volatile __near uint8  *)0xFF01U)
#define P1_bit       (*(volatile __near __bitf_T *)0xFF01U)
#define P2           (*(volatile __near uint8  *)0xFF02U)
#define P2_bit       (*(volatile __near __bitf_T *)0xFF02U)
#define P3           (*(volatile __near uint8  *)0xFF03U)
#define P3_bit       (*(volatile __near __bitf_T *)0xFF03U)
#define P4           (*(volatile __near uint8  *)0xFF04U)
#define P4_bit       (*(volatile __near __bitf_T *)0xFF04U)
#define P5           (*(volatile __near uint8  *)0xFF05U)
#define P5_bit       (*(volatile __near __bitf_T *)0xFF05U)
#define P6           (*(volatile __near uint8  *)0xFF06U)
#define P6_bit       (*(volatile __near __bitf_T *)0xFF06U)
#define P7           (*(volatile __near uint8  *)0xFF07U)
#define P7_bit       (*(volatile __near __bitf_T *)0xFF07U)
#define P12          (*(volatile __near uint8  *)0xFF0CU)
#define P12_bit      (*(volatile __near __bitf_T *)0xFF0CU)
#define P13          (*(volatile __near uint8  *)0xFF0DU)
#define P13_bit      (*(volatile __near __bitf_T *)0xFF0DU)
#define P14          (*(volatile __near uint8  *)0xFF0EU)
#define P14_bit      (*(volatile __near __bitf_T *)0xFF0EU)
#define SDR00        (*(volatile __near uint16 *)0xFF10U)
#define SIO00        (*(volatile __near uint8  *)0xFF10U)
#define TXD0         (*(volatile __near uint8  *)0xFF10U)
#define SDR01        (*(volatile __near uint16 *)0xFF12U)
#define RXD0         (*(volatile __near uint8  *)0xFF12U)
#define SIO01        (*(volatile __near uint8  *)0xFF12U)
#define TDR00        (*(volatile __near uint16 *)0xFF18U)
#define TDR01        (*(volatile __near uint16 *)0xFF1AU)
#define TDR01L       (*(volatile __near uint8  *)0xFF1AU)
#define TDR01H       (*(volatile __near uint8  *)0xFF1BU)
#define ADCR         (*(volatile __near uint16 *)0xFF1EU)
#define ADCRH        (*(volatile __near uint8  *)0xFF1FU)
#define PM0          (*(volatile __near uint8  *)0xFF20U)
#define PM0_bit      (*(volatile __near __bitf_T *)0xFF20U)
#define PM1          (*(volatile __near uint8  *)0xFF21U)
#define PM1_bit      (*(volatile __near __bitf_T *)0xFF21U)
#define PM2          (*(volatile __near uint8  *)0xFF22U)
#define PM2_bit      (*(volatile __near __bitf_T *)0xFF22U)
#define PM3          (*(volatile __near uint8  *)0xFF23U)
#define PM3_bit      (*(volatile __near __bitf_T *)0xFF23U)
#define PM4          (*(volatile __near uint8  *)0xFF24U)
#define PM4_bit      (*(volatile __near __bitf_T *)0xFF24U)
#define PM5          (*(volatile __near uint8  *)0xFF25U)
#define PM5_bit      (*(volatile __near __bitf_T *)0xFF25U)
#define PM6          (*(volatile __near uint8  *)0xFF26U)
#define PM6_bit      (*(volatile __near __bitf_T *)0xFF26U)
#define PM7          (*(volatile __near uint8  *)0xFF27U)
#define PM7_bit      (*(volatile __near __bitf_T *)0xFF27U)
#define PM12         (*(volatile __near uint8  *)0xFF2CU)
#define PM12_bit     (*(volatile __near __bitf_T *)0xFF2CU)
#define PM14         (*(volatile __near uint8  *)0xFF2EU)
#define PM14_bit     (*(volatile __near __bitf_T *)0xFF2EU)
#define ADM0         (*(volatile __near uint8  *)0xFF30U)
#define ADM0_bit     (*(volatile __near __bitf_T *)0xFF30U)
#define ADCE         (((volatile __near __bitf_T *)0xFF30U)->no0)
#define ADCS         (((volatile __near __bitf_T *)0xFF30U)->no7)
#define ADS          (*(volatile __near uint8  *)0xFF31U)
#define ADS_bit      (*(volatile __near __bitf_T *)0xFF31U)
#define ADM1         (*(volatile __near uint8  *)0xFF32U)
#define ADM1_bit     (*(volatile __near __bitf_T *)0xFF32U)
#define KRM          (*(volatile __near uint8  *)0xFF37U)
#define KRM_bit      (*(volatile __near __bitf_T *)0xFF37U)
#define EGP0         (*(volatile __near uint8  *)0xFF38U)
#define EGP0_bit     (*(volatile __near __bitf_T *)0xFF38U)
#define EGN0         (*(volatile __near uint8  *)0xFF39U)
#define EGN0_bit     (*(volatile __near __bitf_T *)0xFF39U)
#define EGP1         (*(volatile __near uint8  *)0xFF3AU)
#define EGP1_bit     (*(volatile __near __bitf_T *)0xFF3AU)
#define EGN1         (*(volatile __near uint8  *)0xFF3BU)
#define EGN1_bit     (*(volatile __near __bitf_T *)0xFF3BU)
#define SDR02        (*(volatile __near uint16 *)0xFF44U)
#define SIO10        (*(volatile __near uint8  *)0xFF44U)
#define TXD1         (*(volatile __near uint8  *)0xFF44U)
#define SDR03        (*(volatile __near uint16 *)0xFF46U)
#define RXD1         (*(volatile __near uint8  *)0xFF46U)
#define SIO11        (*(volatile __near uint8  *)0xFF46U)
#define SDR10        (*(volatile __near uint16 *)0xFF48U)
#define SIO20        (*(volatile __near uint8  *)0xFF48U)
#define TXD2         (*(volatile __near uint8  *)0xFF48U)
#define SDR11        (*(volatile __near uint16 *)0xFF4AU)
#define RXD2         (*(volatile __near uint8  *)0xFF4AU)
#define SIO21        (*(volatile __near uint8  *)0xFF4AU)
#define IICA0        (*(volatile __near uint8  *)0xFF50U)
#define IICS0        (*(volatile __near uint8  *)0xFF51U)
#define IICS0_bit    (*(volatile __near __bitf_T *)0xFF51U)
#define SPD0         (((volatile __near __bitf_T *)0xFF51U)->no0)
#define STD0         (((volatile __near __bitf_T *)0xFF51U)->no1)
#define ACKD0        (((volatile __near __bitf_T *)0xFF51U)->no2)
#define TRC0         (((volatile __near __bitf_T *)0xFF51U)->no3)
#define COI0         (((volatile __near __bitf_T *)0xFF51U)->no4)
#define EXC0         (((volatile __near __bitf_T *)0xFF51U)->no5)
#define ALD0         (((volatile __near __bitf_T *)0xFF51U)->no6)
#define MSTS0        (((volatile __near __bitf_T *)0xFF51U)->no7)
#define IICF0        (*(volatile __near uint8  *)0xFF52U)
#define IICF0_bit    (*(volatile __near __bitf_T *)0xFF52U)
#define IICRSV0      (((volatile __near __bitf_T *)0xFF52U)->no0)
#define STCEN0       (((volatile __near __bitf_T *)0xFF52U)->no1)
#define IICBSY0      (((volatile __near __bitf_T *)0xFF52U)->no6)
#define STCF0        (((volatile __near __bitf_T *)0xFF52U)->no7)
#define TDR02        (*(volatile __near uint16 *)0xFF64U)
#define TDR03        (*(volatile __near uint16 *)0xFF66U)
#define TDR03L       (*(volatile __near uint8  *)0xFF66U)
#define TDR03H       (*(volatile __near uint8  *)0xFF67U)
#define TDR04        (*(volatile __near uint16 *)0xFF68U)
#define TDR05        (*(volatile __near uint16 *)0xFF6AU)
#define TDR06        (*(volatile __near uint16 *)0xFF6CU)
#define TDR07        (*(volatile __near uint16 *)0xFF6EU)
#define ITMC         (*(volatile __near uint16 *)0xFF90U)
#define SEC          (*(volatile __near uint8  *)0xFF92U)
#define MIN          (*(volatile __near uint8  *)0xFF93U)
#define HOUR         (*(volatile __near uint8  *)0xFF94U)
#define WEEK         (*(volatile __near uint8  *)0xFF95U)
#define DAY          (*(volatile __near uint8  *)0xFF96U)
#define MONTH        (*(volatile __near uint8  *)0xFF97U)
#define YEAR         (*(volatile __near uint8  *)0xFF98U)
#define SUBCUD       (*(volatile __near uint8  *)0xFF99U)
#define ALARMWM      (*(volatile __near uint8  *)0xFF9AU)
#define ALARMWH      (*(volatile __near uint8  *)0xFF9BU)
#define ALARMWW      (*(volatile __near uint8  *)0xFF9CU)
#define RTCC0        (*(volatile __near uint8  *)0xFF9DU)
#define RTCC0_bit    (*(volatile __near __bitf_T *)0xFF9DU)
#define RCLOE1       (((volatile __near __bitf_T *)0xFF9DU)->no5)
#define RTCE         (((volatile __near __bitf_T *)0xFF9DU)->no7)
#define RTCC1        (*(volatile __near uint8  *)0xFF9EU)
#define RTCC1_bit    (*(volatile __near __bitf_T *)0xFF9EU)
#define RWAIT        (((volatile __near __bitf_T *)0xFF9EU)->no0)
#define RWST         (((volatile __near __bitf_T *)0xFF9EU)->no1)
#define RIFG         (((volatile __near __bitf_T *)0xFF9EU)->no3)
#define WAFG         (((volatile __near __bitf_T *)0xFF9EU)->no4)
#define WALIE        (((volatile __near __bitf_T *)0xFF9EU)->no6)
#define WALE         (((volatile __near __bitf_T *)0xFF9EU)->no7)
#define CMC          (*(volatile __near uint8  *)0xFFA0U)
#define CSC          (*(volatile __near uint8  *)0xFFA1U)
#define CSC_bit      (*(volatile __near __bitf_T *)0xFFA1U)
#define HIOSTOP      (((volatile __near __bitf_T *)0xFFA1U)->no0)
#define XTSTOP       (((volatile __near __bitf_T *)0xFFA1U)->no6)
#define MSTOP        (((volatile __near __bitf_T *)0xFFA1U)->no7)
#define OSTC         (*(volatile __near uint8  *)0xFFA2U)
#define OSTC_bit     (*(volatile __near __bitf_T *)0xFFA2U)
#define OSTS         (*(volatile __near uint8  *)0xFFA3U)
#define CKC          (*(volatile __near uint8  *)0xFFA4U)
#define CKC_bit      (*(volatile __near __bitf_T *)0xFFA4U)
#define SDIV         (((volatile __near __bitf_T *)0xFFA4U)->no3)
#define MCM0         (((volatile __near __bitf_T *)0xFFA4U)->no4)
#define MCS          (((volatile __near __bitf_T *)0xFFA4U)->no5)
#define CSS          (((volatile __near __bitf_T *)0xFFA4U)->no6)
#define CLS          (((volatile __near __bitf_T *)0xFFA4U)->no7)
#define CKS0         (*(volatile __near uint8  *)0xFFA5U)
#define CKS0_bit     (*(volatile __near __bitf_T *)0xFFA5U)
#define PCLOE0       (((volatile __near __bitf_T *)0xFFA5U)->no7)
#define CKS1         (*(volatile __near uint8  *)0xFFA6U)
#define CKS1_bit     (*(volatile __near __bitf_T *)0xFFA6U)
#define PCLOE1       (((volatile __near __bitf_T *)0xFFA6U)->no7)
#define RESF         (*(volatile __near uint8  *)0xFFA8U)
#define LVIM         (*(volatile __near uint8  *)0xFFA9U)
#define LVIM_bit     (*(volatile __near __bitf_T *)0xFFA9U)
#define LVIF         (((volatile __near __bitf_T *)0xFFA9U)->no0)
#define LVIOMSK      (((volatile __near __bitf_T *)0xFFA9U)->no1)
#define LVISEN       (((volatile __near __bitf_T *)0xFFA9U)->no7)
#define LVIS         (*(volatile __near uint8  *)0xFFAAU)
#define LVIS_bit     (*(volatile __near __bitf_T *)0xFFAAU)
#define LVILV        (((volatile __near __bitf_T *)0xFFAAU)->no0)
#define LVIMD        (((volatile __near __bitf_T *)0xFFAAU)->no7)
#define WDTE         (*(volatile __near uint8  *)0xFFABU)
#define CRCIN        (*(volatile __near uint8  *)0xFFACU)
#define DSA0         (*(volatile __near uint8  *)0xFFB0U)
#define DSA1         (*(volatile __near uint8  *)0xFFB1U)
#define DRA0         (*(volatile __near uint16 *)0xFFB2U)
#define DRA0L        (*(volatile __near uint8  *)0xFFB2U)
#define DRA0H        (*(volatile __near uint8  *)0xFFB3U)
#define DRA1         (*(volatile __near uint16 *)0xFFB4U)
#define DRA1L        (*(volatile __near uint8  *)0xFFB4U)
#define DRA1H        (*(volatile __near uint8  *)0xFFB5U)
#define DBC0         (*(volatile __near uint16 *)0xFFB6U)
#define DBC0L        (*(volatile __near uint8  *)0xFFB6U)
#define DBC0H        (*(volatile __near uint8  *)0xFFB7U)
#define DBC1         (*(volatile __near uint16 *)0xFFB8U)
#define DBC1L        (*(volatile __near uint8  *)0xFFB8U)
#define DBC1H        (*(volatile __near uint8  *)0xFFB9U)
#define DMC0         (*(volatile __near uint8  *)0xFFBAU)
#define DMC0_bit     (*(volatile __near __bitf_T *)0xFFBAU)
#define DWAIT0       (((volatile __near __bitf_T *)0xFFBAU)->no4)
#define DS0          (((volatile __near __bitf_T *)0xFFBAU)->no5)
#define DRS0         (((volatile __near __bitf_T *)0xFFBAU)->no6)
#define STG0         (((volatile __near __bitf_T *)0xFFBAU)->no7)
#define DMC1         (*(volatile __near uint8  *)0xFFBBU)
#define DMC1_bit     (*(volatile __near __bitf_T *)0xFFBBU)
#define DWAIT1       (((volatile __near __bitf_T *)0xFFBBU)->no4)
#define DS1          (((volatile __near __bitf_T *)0xFFBBU)->no5)
#define DRS1         (((volatile __near __bitf_T *)0xFFBBU)->no6)
#define STG1         (((volatile __near __bitf_T *)0xFFBBU)->no7)
#define DRC0         (*(volatile __near uint8  *)0xFFBCU)
#define DRC0_bit     (*(volatile __near __bitf_T *)0xFFBCU)
#define DST0         (((volatile __near __bitf_T *)0xFFBCU)->no0)
#define DEN0         (((volatile __near __bitf_T *)0xFFBCU)->no7)
#define DRC1         (*(volatile __near uint8  *)0xFFBDU)
#define DRC1_bit     (*(volatile __near __bitf_T *)0xFFBDU)
#define DST1         (((volatile __near __bitf_T *)0xFFBDU)->no0)
#define DEN1         (((volatile __near __bitf_T *)0xFFBDU)->no7)
#define IF2          (*(volatile __near uint16 *)0xFFD0U)
#define IF2L         (*(volatile __near uint8  *)0xFFD0U)
#define IF2L_bit     (*(volatile __near __bitf_T *)0xFFD0U)
#define IF2H         (*(volatile __near uint8  *)0xFFD1U)
#define IF2H_bit     (*(volatile __near __bitf_T *)0xFFD1U)
#define TMIF05       (((volatile __near __bitf_T *)0xFFD0U)->no0)
#define TMIF06       (((volatile __near __bitf_T *)0xFFD0U)->no1)
#define TMIF07       (((volatile __near __bitf_T *)0xFFD0U)->no2)
#define PIF6         (((volatile __near __bitf_T *)0xFFD0U)->no3)
#define PIF7         (((volatile __near __bitf_T *)0xFFD0U)->no4)
#define PIF8         (((volatile __near __bitf_T *)0xFFD0U)->no5)
#define PIF9         (((volatile __near __bitf_T *)0xFFD0U)->no6)
#define PIF10        (((volatile __near __bitf_T *)0xFFD0U)->no7)
#define PIF11        (((volatile __near __bitf_T *)0xFFD1U)->no0)
#define MDIF         (((volatile __near __bitf_T *)0xFFD1U)->no5)
#define FLIF         (((volatile __near __bitf_T *)0xFFD1U)->no7)
#define MK2          (*(volatile __near uint16 *)0xFFD4U)
#define MK2L         (*(volatile __near uint8  *)0xFFD4U)
#define MK2L_bit     (*(volatile __near __bitf_T *)0xFFD4U)
#define MK2H         (*(volatile __near uint8  *)0xFFD5U)
#define MK2H_bit     (*(volatile __near __bitf_T *)0xFFD5U)
#define TMMK05       (((volatile __near __bitf_T *)0xFFD4U)->no0)
#define TMMK06       (((volatile __near __bitf_T *)0xFFD4U)->no1)
#define TMMK07       (((volatile __near __bitf_T *)0xFFD4U)->no2)
#define PMK6         (((volatile __near __bitf_T *)0xFFD4U)->no3)
#define PMK7         (((volatile __near __bitf_T *)0xFFD4U)->no4)
#define PMK8         (((volatile __near __bitf_T *)0xFFD4U)->no5)
#define PMK9         (((volatile __near __bitf_T *)0xFFD4U)->no6)
#define PMK10        (((volatile __near __bitf_T *)0xFFD4U)->no7)
#define PMK11        (((volatile __near __bitf_T *)0xFFD5U)->no0)
#define MDMK         (((volatile __near __bitf_T *)0xFFD5U)->no5)
#define FLMK         (((volatile __near __bitf_T *)0xFFD5U)->no7)
#define PR02         (*(volatile __near uint16 *)0xFFD8U)
#define PR02L        (*(volatile __near uint8  *)0xFFD8U)
#define PR02L_bit    (*(volatile __near __bitf_T *)0xFFD8U)
#define PR02H        (*(volatile __near uint8  *)0xFFD9U)
#define PR02H_bit    (*(volatile __near __bitf_T *)0xFFD9U)
#define TMPR005      (((volatile __near __bitf_T *)0xFFD8U)->no0)
#define TMPR006      (((volatile __near __bitf_T *)0xFFD8U)->no1)
#define TMPR007      (((volatile __near __bitf_T *)0xFFD8U)->no2)
#define PPR06        (((volatile __near __bitf_T *)0xFFD8U)->no3)
#define PPR07        (((volatile __near __bitf_T *)0xFFD8U)->no4)
#define PPR08        (((volatile __near __bitf_T *)0xFFD8U)->no5)
#define PPR09        (((volatile __near __bitf_T *)0xFFD8U)->no6)
#define PPR010       (((volatile __near __bitf_T *)0xFFD8U)->no7)
#define PPR011       (((volatile __near __bitf_T *)0xFFD9U)->no0)
#define MDPR0        (((volatile __near __bitf_T *)0xFFD9U)->no5)
#define FLPR0        (((volatile __near __bitf_T *)0xFFD9U)->no7)
#define PR12         (*(volatile __near uint16 *)0xFFDCU)
#define PR12L        (*(volatile __near uint8  *)0xFFDCU)
#define PR12L_bit    (*(volatile __near __bitf_T *)0xFFDCU)
#define PR12H        (*(volatile __near uint8  *)0xFFDDU)
#define PR12H_bit    (*(volatile __near __bitf_T *)0xFFDDU)
#define TMPR105      (((volatile __near __bitf_T *)0xFFDCU)->no0)
#define TMPR106      (((volatile __near __bitf_T *)0xFFDCU)->no1)
#define TMPR107      (((volatile __near __bitf_T *)0xFFDCU)->no2)
#define PPR16        (((volatile __near __bitf_T *)0xFFDCU)->no3)
#define PPR17        (((volatile __near __bitf_T *)0xFFDCU)->no4)
#define PPR18        (((volatile __near __bitf_T *)0xFFDCU)->no5)
#define PPR19        (((volatile __near __bitf_T *)0xFFDCU)->no6)
#define PPR110       (((volatile __near __bitf_T *)0xFFDCU)->no7)
#define PPR111       (((volatile __near __bitf_T *)0xFFDDU)->no0)
#define MDPR1        (((volatile __near __bitf_T *)0xFFDDU)->no5)
#define FLPR1        (((volatile __near __bitf_T *)0xFFDDU)->no7)
#define IF0          (*(volatile __near uint16 *)0xFFE0U)
#define IF0L         (*(volatile __near uint8  *)0xFFE0U)
#define IF0L_bit     (*(volatile __near __bitf_T *)0xFFE0U)
#define IF0H         (*(volatile __near uint8  *)0xFFE1U)
#define IF0H_bit     (*(volatile __near __bitf_T *)0xFFE1U)
#define WDTIIF       (((volatile __near __bitf_T *)0xFFE0U)->no0)
#define LVIIF        (((volatile __near __bitf_T *)0xFFE0U)->no1)
#define PIF0         (((volatile __near __bitf_T *)0xFFE0U)->no2)
#define PIF1         (((volatile __near __bitf_T *)0xFFE0U)->no3)
#define PIF2         (((volatile __near __bitf_T *)0xFFE0U)->no4)
#define PIF3         (((volatile __near __bitf_T *)0xFFE0U)->no5)
#define PIF4         (((volatile __near __bitf_T *)0xFFE0U)->no6)
#define PIF5         (((volatile __near __bitf_T *)0xFFE0U)->no7)
#define CSIIF20      (((volatile __near __bitf_T *)0xFFE1U)->no0)
#define IICIF20      (((volatile __near __bitf_T *)0xFFE1U)->no0)
#define STIF2        (((volatile __near __bitf_T *)0xFFE1U)->no0)
#define CSIIF21      (((volatile __near __bitf_T *)0xFFE1U)->no1)
#define IICIF21      (((volatile __near __bitf_T *)0xFFE1U)->no1)
#define SRIF2        (((volatile __near __bitf_T *)0xFFE1U)->no1)
#define SREIF2       (((volatile __near __bitf_T *)0xFFE1U)->no2)
#define DMAIF0       (((volatile __near __bitf_T *)0xFFE1U)->no3)
#define DMAIF1       (((volatile __near __bitf_T *)0xFFE1U)->no4)
#define CSIIF00      (((volatile __near __bitf_T *)0xFFE1U)->no5)
#define IICIF00      (((volatile __near __bitf_T *)0xFFE1U)->no5)
#define STIF0        (((volatile __near __bitf_T *)0xFFE1U)->no5)
#define CSIIF01      (((volatile __near __bitf_T *)0xFFE1U)->no6)
#define IICIF01      (((volatile __near __bitf_T *)0xFFE1U)->no6)
#define SRIF0        (((volatile __near __bitf_T *)0xFFE1U)->no6)
#define SREIF0       (((volatile __near __bitf_T *)0xFFE1U)->no7)
#define TMIF01H      (((volatile __near __bitf_T *)0xFFE1U)->no7)
#define IF1          (*(volatile __near uint16 *)0xFFE2U)
#define IF1L         (*(volatile __near uint8  *)0xFFE2U)
#define IF1L_bit     (*(volatile __near __bitf_T *)0xFFE2U)
#define IF1H         (*(volatile __near uint8  *)0xFFE3U)
#define IF1H_bit     (*(volatile __near __bitf_T *)0xFFE3U)
#define CSIIF10      (((volatile __near __bitf_T *)0xFFE2U)->no0)
#define IICIF10      (((volatile __near __bitf_T *)0xFFE2U)->no0)
#define STIF1        (((volatile __near __bitf_T *)0xFFE2U)->no0)
#define CSIIF11      (((volatile __near __bitf_T *)0xFFE2U)->no1)
#define IICIF11      (((volatile __near __bitf_T *)0xFFE2U)->no1)
#define SRIF1        (((volatile __near __bitf_T *)0xFFE2U)->no1)
#define SREIF1       (((volatile __near __bitf_T *)0xFFE2U)->no2)
#define TMIF03H      (((volatile __near __bitf_T *)0xFFE2U)->no2)
#define IICAIF0      (((volatile __near __bitf_T *)0xFFE2U)->no3)
#define TMIF00       (((volatile __near __bitf_T *)0xFFE2U)->no4)
#define TMIF01       (((volatile __near __bitf_T *)0xFFE2U)->no5)
#define TMIF02       (((volatile __near __bitf_T *)0xFFE2U)->no6)
#define TMIF03       (((volatile __near __bitf_T *)0xFFE2U)->no7)
#define ADIF         (((volatile __near __bitf_T *)0xFFE3U)->no0)
#define RTCIF        (((volatile __near __bitf_T *)0xFFE3U)->no1)
#define ITIF         (((volatile __near __bitf_T *)0xFFE3U)->no2)
#define KRIF         (((volatile __near __bitf_T *)0xFFE3U)->no3)
#define TMIF04       (((volatile __near __bitf_T *)0xFFE3U)->no7)
#define MK0          (*(volatile __near uint16 *)0xFFE4U)
#define MK0L         (*(volatile __near uint8  *)0xFFE4U)
#define MK0L_bit     (*(volatile __near __bitf_T *)0xFFE4U)
#define MK0H         (*(volatile __near uint8  *)0xFFE5U)
#define MK0H_bit     (*(volatile __near __bitf_T *)0xFFE5U)
#define WDTIMK       (((volatile __near __bitf_T *)0xFFE4U)->no0)
#define LVIMK        (((volatile __near __bitf_T *)0xFFE4U)->no1)
#define PMK0         (((volatile __near __bitf_T *)0xFFE4U)->no2)
#define PMK1         (((volatile __near __bitf_T *)0xFFE4U)->no3)
#define PMK2         (((volatile __near __bitf_T *)0xFFE4U)->no4)
#define PMK3         (((volatile __near __bitf_T *)0xFFE4U)->no5)
#define PMK4         (((volatile __near __bitf_T *)0xFFE4U)->no6)
#define PMK5         (((volatile __near __bitf_T *)0xFFE4U)->no7)
#define CSIMK20      (((volatile __near __bitf_T *)0xFFE5U)->no0)
#define IICMK20      (((volatile __near __bitf_T *)0xFFE5U)->no0)
#define STMK2        (((volatile __near __bitf_T *)0xFFE5U)->no0)
#define CSIMK21      (((volatile __near __bitf_T *)0xFFE5U)->no1)
#define IICMK21      (((volatile __near __bitf_T *)0xFFE5U)->no1)
#define SRMK2        (((volatile __near __bitf_T *)0xFFE5U)->no1)
#define SREMK2       (((volatile __near __bitf_T *)0xFFE5U)->no2)
#define DMAMK0       (((volatile __near __bitf_T *)0xFFE5U)->no3)
#define DMAMK1       (((volatile __near __bitf_T *)0xFFE5U)->no4)
#define CSIMK00      (((volatile __near __bitf_T *)0xFFE5U)->no5)
#define IICMK00      (((volatile __near __bitf_T *)0xFFE5U)->no5)
#define STMK0        (((volatile __near __bitf_T *)0xFFE5U)->no5)
#define CSIMK01      (((volatile __near __bitf_T *)0xFFE5U)->no6)
#define IICMK01      (((volatile __near __bitf_T *)0xFFE5U)->no6)
#define SRMK0        (((volatile __near __bitf_T *)0xFFE5U)->no6)
#define SREMK0       (((volatile __near __bitf_T *)0xFFE5U)->no7)
#define TMMK01H      (((volatile __near __bitf_T *)0xFFE5U)->no7)
#define MK1          (*(volatile __near uint16 *)0xFFE6U)
#define MK1L         (*(volatile __near uint8  *)0xFFE6U)
#define MK1L_bit     (*(volatile __near __bitf_T *)0xFFE6U)
#define MK1H         (*(volatile __near uint8  *)0xFFE7U)
#define MK1H_bit     (*(volatile __near __bitf_T *)0xFFE7U)
#define CSIMK10      (((volatile __near __bitf_T *)0xFFE6U)->no0)
#define IICMK10      (((volatile __near __bitf_T *)0xFFE6U)->no0)
#define STMK1        (((volatile __near __bitf_T *)0xFFE6U)->no0)
#define CSIMK11      (((volatile __near __bitf_T *)0xFFE6U)->no1)
#define IICMK11      (((volatile __near __bitf_T *)0xFFE6U)->no1)
#define SRMK1        (((volatile __near __bitf_T *)0xFFE6U)->no1)
#define SREMK1       (((volatile __near __bitf_T *)0xFFE6U)->no2)
#define TMMK03H      (((volatile __near __bitf_T *)0xFFE6U)->no2)
#define IICAMK0      (((volatile __near __bitf_T *)0xFFE6U)->no3)
#define TMMK00       (((volatile __near __bitf_T *)0xFFE6U)->no4)
#define TMMK01       (((volatile __near __bitf_T *)0xFFE6U)->no5)
#define TMMK02       (((volatile __near __bitf_T *)0xFFE6U)->no6)
#define TMMK03       (((volatile __near __bitf_T *)0xFFE6U)->no7)
#define ADMK         (((volatile __near __bitf_T *)0xFFE7U)->no0)
#define RTCMK        (((volatile __near __bitf_T *)0xFFE7U)->no1)
#define ITMK         (((volatile __near __bitf_T *)0xFFE7U)->no2)
#define KRMK         (((volatile __near __bitf_T *)0xFFE7U)->no3)
#define TMMK04       (((volatile __near __bitf_T *)0xFFE7U)->no7)
#define PR00         (*(volatile __near uint16 *)0xFFE8U)
#define PR00L        (*(volatile __near uint8  *)0xFFE8U)
#define PR00L_bit    (*(volatile __near __bitf_T *)0xFFE8U)
#define PR00H        (*(volatile __near uint8  *)0xFFE9U)
#define PR00H_bit    (*(volatile __near __bitf_T *)0xFFE9U)
#define WDTIPR0      (((volatile __near __bitf_T *)0xFFE8U)->no0)
#define LVIPR0       (((volatile __near __bitf_T *)0xFFE8U)->no1)
#define PPR00        (((volatile __near __bitf_T *)0xFFE8U)->no2)
#define PPR01        (((volatile __near __bitf_T *)0xFFE8U)->no3)
#define PPR02        (((volatile __near __bitf_T *)0xFFE8U)->no4)
#define PPR03        (((volatile __near __bitf_T *)0xFFE8U)->no5)
#define PPR04        (((volatile __near __bitf_T *)0xFFE8U)->no6)
#define PPR05        (((volatile __near __bitf_T *)0xFFE8U)->no7)
#define CSIPR020     (((volatile __near __bitf_T *)0xFFE9U)->no0)
#define IICPR020     (((volatile __near __bitf_T *)0xFFE9U)->no0)
#define STPR02       (((volatile __near __bitf_T *)0xFFE9U)->no0)
#define CSIPR021     (((volatile __near __bitf_T *)0xFFE9U)->no1)
#define IICPR021     (((volatile __near __bitf_T *)0xFFE9U)->no1)
#define SRPR02       (((volatile __near __bitf_T *)0xFFE9U)->no1)
#define SREPR02      (((volatile __near __bitf_T *)0xFFE9U)->no2)
#define DMAPR00      (((volatile __near __bitf_T *)0xFFE9U)->no3)
#define DMAPR01      (((volatile __near __bitf_T *)0xFFE9U)->no4)
#define CSIPR000     (((volatile __near __bitf_T *)0xFFE9U)->no5)
#define IICPR000     (((volatile __near __bitf_T *)0xFFE9U)->no5)
#define STPR00       (((volatile __near __bitf_T *)0xFFE9U)->no5)
#define CSIPR001     (((volatile __near __bitf_T *)0xFFE9U)->no6)
#define IICPR001     (((volatile __near __bitf_T *)0xFFE9U)->no6)
#define SRPR00       (((volatile __near __bitf_T *)0xFFE9U)->no6)
#define SREPR00      (((volatile __near __bitf_T *)0xFFE9U)->no7)
#define TMPR001H     (((volatile __near __bitf_T *)0xFFE9U)->no7)
#define PR01         (*(volatile __near uint16 *)0xFFEAU)
#define PR01L        (*(volatile __near uint8  *)0xFFEAU)
#define PR01L_bit    (*(volatile __near __bitf_T *)0xFFEAU)
#define PR01H        (*(volatile __near uint8  *)0xFFEBU)
#define PR01H_bit    (*(volatile __near __bitf_T *)0xFFEBU)
#define CSIPR010     (((volatile __near __bitf_T *)0xFFEAU)->no0)
#define IICPR010     (((volatile __near __bitf_T *)0xFFEAU)->no0)
#define STPR01       (((volatile __near __bitf_T *)0xFFEAU)->no0)
#define CSIPR011     (((volatile __near __bitf_T *)0xFFEAU)->no1)
#define IICPR011     (((volatile __near __bitf_T *)0xFFEAU)->no1)
#define SRPR01       (((volatile __near __bitf_T *)0xFFEAU)->no1)
#define SREPR01      (((volatile __near __bitf_T *)0xFFEAU)->no2)
#define TMPR003H     (((volatile __near __bitf_T *)0xFFEAU)->no2)
#define IICAPR00     (((volatile __near __bitf_T *)0xFFEAU)->no3)
#define TMPR000      (((volatile __near __bitf_T *)0xFFEAU)->no4)
#define TMPR001      (((volatile __near __bitf_T *)0xFFEAU)->no5)
#define TMPR002      (((volatile __near __bitf_T *)0xFFEAU)->no6)
#define TMPR003      (((volatile __near __bitf_T *)0xFFEAU)->no7)
#define ADPR0        (((volatile __near __bitf_T *)0xFFEBU)->no0)
#define RTCPR0       (((volatile __near __bitf_T *)0xFFEBU)->no1)
#define ITPR0        (((volatile __near __bitf_T *)0xFFEBU)->no2)
#define KRPR0        (((volatile __near __bitf_T *)0xFFEBU)->no3)
#define TMPR004      (((volatile __near __bitf_T *)0xFFEBU)->no7)
#define PR10         (*(volatile __near uint16 *)0xFFECU)
#define PR10L        (*(volatile __near uint8  *)0xFFECU)
#define PR10L_bit    (*(volatile __near __bitf_T *)0xFFECU)
#define PR10H        (*(volatile __near uint8  *)0xFFEDU)
#define PR10H_bit    (*(volatile __near __bitf_T *)0xFFEDU)
#define WDTIPR1      (((volatile __near __bitf_T *)0xFFECU)->no0)
#define LVIPR1       (((volatile __near __bitf_T *)0xFFECU)->no1)
#define PPR10        (((volatile __near __bitf_T *)0xFFECU)->no2)
#define PPR11        (((volatile __near __bitf_T *)0xFFECU)->no3)
#define PPR12        (((volatile __near __bitf_T *)0xFFECU)->no4)
#define PPR13        (((volatile __near __bitf_T *)0xFFECU)->no5)
#define PPR14        (((volatile __near __bitf_T *)0xFFECU)->no6)
#define PPR15        (((volatile __near __bitf_T *)0xFFECU)->no7)
#define CSIPR120     (((volatile __near __bitf_T *)0xFFEDU)->no0)
#define IICPR120     (((volatile __near __bitf_T *)0xFFEDU)->no0)
#define STPR12       (((volatile __near __bitf_T *)0xFFEDU)->no0)
#define CSIPR121     (((volatile __near __bitf_T *)0xFFEDU)->no1)
#define IICPR121     (((volatile __near __bitf_T *)0xFFEDU)->no1)
#define SRPR12       (((volatile __near __bitf_T *)0xFFEDU)->no1)
#define SREPR12      (((volatile __near __bitf_T *)0xFFEDU)->no2)
#define DMAPR10      (((volatile __near __bitf_T *)0xFFEDU)->no3)
#define DMAPR11      (((volatile __near __bitf_T *)0xFFEDU)->no4)
#define CSIPR100     (((volatile __near __bitf_T *)0xFFEDU)->no5)
#define IICPR100     (((volatile __near __bitf_T *)0xFFEDU)->no5)
#define STPR10       (((volatile __near __bitf_T *)0xFFEDU)->no5)
#define CSIPR101     (((volatile __near __bitf_T *)0xFFEDU)->no6)
#define IICPR101     (((volatile __near __bitf_T *)0xFFEDU)->no6)
#define SRPR10       (((volatile __near __bitf_T *)0xFFEDU)->no6)
#define SREPR10      (((volatile __near __bitf_T *)0xFFEDU)->no7)
#define TMPR101H     (((volatile __near __bitf_T *)0xFFEDU)->no7)
#define PR11         (*(volatile __near uint16 *)0xFFEEU)
#define PR11L        (*(volatile __near uint8  *)0xFFEEU)
#define PR11L_bit    (*(volatile __near __bitf_T *)0xFFEEU)
#define PR11H        (*(volatile __near uint8  *)0xFFEFU)
#define PR11H_bit    (*(volatile __near __bitf_T *)0xFFEFU)
#define CSIPR110     (((volatile __near __bitf_T *)0xFFEEU)->no0)
#define IICPR110     (((volatile __near __bitf_T *)0xFFEEU)->no0)
#define STPR11       (((volatile __near __bitf_T *)0xFFEEU)->no0)
#define CSIPR111     (((volatile __near __bitf_T *)0xFFEEU)->no1)
#define IICPR111     (((volatile __near __bitf_T *)0xFFEEU)->no1)
#define SRPR11       (((volatile __near __bitf_T *)0xFFEEU)->no1)
#define SREPR11      (((volatile __near __bitf_T *)0xFFEEU)->no2)
#define TMPR103H     (((volatile __near __bitf_T *)0xFFEEU)->no2)
#define IICAPR10     (((volatile __near __bitf_T *)0xFFEEU)->no3)
#define TMPR100      (((volatile __near __bitf_T *)0xFFEEU)->no4)
#define TMPR101      (((volatile __near __bitf_T *)0xFFEEU)->no5)
#define TMPR102      (((volatile __near __bitf_T *)0xFFEEU)->no6)
#define TMPR103      (((volatile __near __bitf_T *)0xFFEEU)->no7)
#define ADPR1        (((volatile __near __bitf_T *)0xFFEFU)->no0)
#define RTCPR1       (((volatile __near __bitf_T *)0xFFEFU)->no1)
#define ITPR1        (((volatile __near __bitf_T *)0xFFEFU)->no2)
#define KRPR1        (((volatile __near __bitf_T *)0xFFEFU)->no3)
#define TMPR104      (((volatile __near __bitf_T *)0xFFEFU)->no7)
#define MDAL         (*(volatile __near uint16 *)0xFFF0U)
#define MULA         (*(volatile __near uint16 *)0xFFF0U)
#define MDAH         (*(volatile __near uint16 *)0xFFF2U)
#define MULB         (*(volatile __near uint16 *)0xFFF2U)
#define MDBH         (*(volatile __near uint16 *)0xFFF4U)
#define MULOH        (*(volatile __near uint16 *)0xFFF4U)
#define MDBL         (*(volatile __near uint16 *)0xFFF6U)
#define MULOL        (*(volatile __near uint16 *)0xFFF6U)
#define PMC          (*(volatile __near uint8  *)0xFFFEU)
#define PMC_bit      (*(volatile __near __bitf_T *)0xFFFEU)
#define MAA          (((volatile __near __bitf_T *)0xFFFEU)->no0)


#define INTWDTI                         0x0004
#define INTLVI                          0x0006
#define INTP0                           0x0008
#define INTP1                           0x000A
#define INTP2                           0x000C
#define INTP3                           0x000E
#define INTP4                           0x0010
#define INTP5                           0x0012
#define INTCSI20                        0x0014
#define INTIIC20                        0x0014
#define INTST2                          0x0014
#define INTCSI21                        0x0016
#define INTIIC21                        0x0016
#define INTSR2                          0x0016
#define INTSRE2                         0x0018
#define INTDMA0                         0x001A
#define INTDMA1                         0x001C
#define INTCSI00                        0x001E
#define INTIIC00                        0x001E
#define INTST0                          0x001E
#define INTCSI01                        0x0020
#define INTIIC01                        0x0020
#define INTSR0                          0x0020
#define INTSRE0                         0x0022
#define INTTM01H                        0x0022
#define INTCSI10                        0x0024
#define INTIIC10                        0x0024
#define INTST1                          0x0024
#define INTCSI11                        0x0026
#define INTIIC11                        0x0026
#define INTSR1                          0x0026
#define INTSRE1                         0x0028
#define INTTM03H                        0x0028
#define INTIICA0                        0x002A
#define INTTM00                         0x002C
#define INTTM01                         0x002E
#define INTTM02                         0x0030
#define INTTM03                         0x0032
#define INTAD                           0x0034
#define INTRTC                          0x0036
#define INTIT                           0x0038
#define INTKR                           0x003A
#define INTTM04                         0x0042
#define INTTM05                         0x0044
#define INTTM06                         0x0046
#define INTTM07                         0x0048
#define INTP6                           0x004A
#define INTP7                           0x004C
#define INTP8                           0x004E
#define INTP9                           0x0050
#define INTP10                          0x0052
#define INTP11                          0x0054
#define INTMD                           0x005E
#define INTFL                           0x0062

#endif
